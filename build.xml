<project basedir="." default="build_jar" name="BUILD_AMH11">
    <description>
        Build AMH11.
    </description>

    <property name="src" location="src" />
    <property name="build" location="build" />
    <property name="lib" location="lib" />
    <property name="build-lib" location="build-lib" />
    <property name="dist" location="dist" />
    <property name="test" location="test" />
    <property name="build-test" location="build-test" />
    <property name="test-reports" location="test-reports" />

    <path id="classpath">
        <fileset dir="${build-lib}" includes="*.jar" />
    </path>

    <target name="init">
        <echo message="${ant.project.name}: ${ant.file}" />
        <copy todir="${build-lib}">
            <fileset dir="${lib}" includes="*.jar" />
        </copy>
    </target>

    <target name="clean">
        <delete dir="${build}" />
        <delete dir="${build-lib}" />
        <delete dir="${build-test}" />
        <delete dir="${test-reports}" />
        <delete dir="${dist}" />
    </target>

    <target name="build" depends="clean,compile" />
    
    <target name="build_jar" depends="clean,compile,dist" />

    <target name="compile" depends="init">
        <echo>Building AMH11</echo>
        <mkdir dir="${build}" />

        <javac source="1.6"
               target="1.6"
               srcdir="${src}"
               destdir="${build}"
               classpathref="classpath"
               includeAntRuntime="false">
            <include name="amh11/**" />
        </javac>
        <echo message="Successfully compiled." />
    </target>

    <target name="dist" depends="compile" description="create AMH11 jar">
        <mkdir dir="${dist}" />
        <jar jarfile="${dist}/AMH11.jar">
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
            </manifest>
            <fileset dir="${build}">
                <include name="amh11/*.class" />
                <include name="amh11/*.properties" />
            </fileset>
            <zipgroupfileset dir="${build-lib}" includes="*.jar" />
        </jar>
    </target>

    <target name="init-test" depends="init">
        <mkdir dir="${build-test}" />
        <mkdir dir="${test-reports}" />
        <get src="http://search.maven.org/remotecontent?filepath=junit/junit/4.11/junit-4.11.jar"
             dest="${build-lib}/junit-4.11.jar" />
        <get src="http://search.maven.org/remotecontent?filepath=org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar"
             dest="${build-lib}/hamcrest-core-1.3.jar" />
        <get src="http://search.maven.org/remotecontent?filepath=org/jblas/jblas/1.2.3/jblas-1.2.3.jar"
             dest="${build-lib}/jblas-1.2.3.jar" />
    </target>

    <target name="compile-test" depends="init-test,compile">
        <javac srcdir="${test}" destdir="${build-test}" includeantruntime="false">
            <classpath>
                <pathelement path="${classpath}" />
                <pathelement path="${build}" />
                <fileset dir="${build-lib}" includes="*.jar" />
            </classpath>
        </javac>
    </target>

    <target name="test" depends="compile-test">
        <junit printsummary="yes" failureproperty="testFailed">
            <classpath>
                <pathelement path="${classpath}" />
                <pathelement path="${build}" />
                <pathelement path="${build-test}" />
                <fileset dir="${build-lib}" includes="*.jar" />
            </classpath>
            <batchtest fork="yes" todir="${test-reports}">
                <fileset dir="${test}">
                    <include name="**/*.java" />
                </fileset>
                <formatter type="plain" />
            </batchtest>
        </junit>
        <fail if="testFailed" status="1" message="Unit test failed." />
    </target>

</project>
